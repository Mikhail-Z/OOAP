package ru.skillsmart.ooap2.task22;

abstract class Thermometer {
    protected int currentTemperature;

    /*
    постусловие -- температура термометра поменяется до температуры объекта измерения
     (не обязательно физически, у электронного поменяется значение в памяти, например)
     */
    public abstract void doMeasure(Object o);
}

enum OperationResult {
    SUCCESS,
    FAILURE,
    NIL
}

class MercuryThermometer extends Thermometer {

    private boolean isShakedOff = true;
    private OperationResult doMeasureOperationResult = OperationResult.NIL;
    /**
     * предусловие -- термометр сброшен
     * @param o
     */
    @Override
    public void doMeasure(Object o) {
        if (!isShakedOff) {
            doMeasureOperationResult = OperationResult.FAILURE;
            return;
        }
        //положить в подмышку конец термометра
    }

    public OperationResult getDoMeasureOperationResult() {
        return doMeasureOperationResult;
    }

    /**
     * стряхнуть термометр
     */
    public void shakeOff() {
        isShakedOff = true;
    }
}

/**
 * Обычное дерево поиска
 */
class BinarySearchTree {
    /**
     * добавление элемента в дерева
     */
    void add() {
        //какая-то логика
    }

    /**
     * удаление из дерева
     * @return
     */
    Object remove() {
        //какая-то логика
        return new Object();
    }

    /**
     * увеличение на 1 всех значений в дереве
     */
    void increment() {

    }
}

/**
 * Дерево поиска, которое не допускает добавление элемента, если разница между минимальной и максимальной высотой превышает какой-то порог.
 */
class BinarySearchTreeWithLimitedHeight extends BinarySearchTree {
    /**
     * предусловие: высота дерева меньше порогового значения
     */
    @Override
    void add() {
        //если в процессе добавления оказывается, что после добавления высота дерева окажется больше порогового значения,
        // то операция считается неуспешной
    }

    @Override
    void increment() {
        super.increment();
    }
}


public class Task22 {
    public static void main(String[] args) {
        //Задание 22.
        //
        //Приведите словесный пример иерархии классов, и объясните, почему в ней нельзя ослаблять постусловия и усиливать предусловия.

        // Примером расширения предусловия на метод в классе-наследнике можно считать наследование ртутного термометра от некоего абстрактного термометра.
        // Изначально у термометра есть только одна операция -- измерить температуру. Однако ртутный термометр требует стряхнуть его, чтобы он мог правильно измерить в следующий раз температуру.
        // Соответственно, при выполнении операции измерения накладывается предусловие того, что ртутный термометр находится в сброшенном состоянии.
        // В результате из-за усиления предусловия нарушается принцип подстановка Барбары Лисков,
        // так как ртутный термометр становится невозможно использовать там, где можно использовать абстрактный термометр.

        //я не до конца уверен в правильности моего примера, так как у Вас в примере в качестве базового класса выступает
        // уже готовый класс с полностью определенной реализацией всех операций,
        // а у меня -- нет, так как абстрактного термометра в природе не существует.


        //Другим примером расширения предусловия является наследования дерева поиска с ограниченной разницей максимальной и минимаьной высотой от обычного бинарного дерева поиска,
        // у которого никаких ограничений нет.
        // В данном случае ослабление постоусловия для операции инкремента значений вершин дерева приведет к тому,
        // что у класса-предка могут быть обновлены не все значения, так как его состояние может отличаться
        // от допустимого состояния дерева, на которое наложено ограничение на максимальную разницу высот.
    }
}
